For token

# @api_view(['POST'])
# def Login(request):
#     serializer = loginSerializer(data=request.data)
    
#     if serializer.is_valid():
#         user = serializer.validated_data['user']
#         refresh = RefreshToken.for_user(user)
#         access_token = refresh.access_token
#         user_data = {
#             "phone_number": user.phone_number,
#             "email": user.email,
#             "id": user.id,
#             "token": str(access_token),  
#         }
#         return Response(user_data, status=status.HTTP_200_OK)
#     else:
#         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
from rest_framework_simplejwt.tokens import RefreshToken
from django.contrib.auth import authenticate
# def set_jwt_cookie(response, user):
#     refresh = RefreshToken.for_user(user)
#     access_token = refresh.access_token
#     response.set_cookie(
#         'access_token',
#         value=str(access_token),
#         httponly=True, 
#         secure=True,  
#         samesite='Lax', 
#         max_age=43200    
#     )
#     return response

# @api_view(['POST'])
# def Login(request):
#     email = request.data.get('email')
#     password = request.data.get('password')
#     user = authenticate(email=email, password=password)

#     if user is None:
#         return Response({'detail': 'Invalid credentials'}, status=status.HTTP_401_UNAUTHORIZED)
#     response = Response({
#         'message': 'Login successful',
#         'email': user.email,
#         'id': user.id,
#     })

#     response = set_jwt_cookie(response, user) 

#     return response
